head(rowSums(notes_sub[,4:6]))
head(rowSums(notes_sub[,4:6]),na.rm=T)
head(rowSums(notes_sub[,4:6]),na.rm=TRUE)
head(rowSums(notes_sub[,4:6],na.rm=TRUE))
notes_sub$ECOG = rowSums(notes_sub[,4:6],na.rm=TRUE)
notes_sub[1:50,]
notes_sub = subset(notes_sub, select=c("empi","date","ECOG"))
notes_sub[1:50,]
notes_sub = subset(ecog_notes, !is.na(ecog_notes$ECOGformulaic) |
!is.na(ecog_notes$ECOGcertain) |
!is.na(ecog_notes$ECOGclear))
notes_sub$ECOG = rowSums(notes_sub[,4:6],na.rm=TRUE)
nrow(notes_sub)
notes_sub$type = "Unknown"
notes_sub[1:50,]
notes_sub$type[,!is.na(notes_sub$ECOGformulaic)] = "Formulaic"
notes_sub$type[,!is.na(notes_sub$ECOGcertain)] = "Certain"
notes_sub$type[,!is.na(notes_sub$ECOGclear)] = "Clear"
notes_sub$type = "Unknown"
nrow(notes_sub)
notes_sub$type[!is.na(notes_sub$ECOGformulaic)] = "Formulaic"
notes_sub$type[!is.na(notes_sub$ECOGcertain)] = "Certain"
notes_sub$type[!is.na(notes_sub$ECOGclear)] = "Clear"
str(notes_sub)
notes_sub = subset(ecog_notes, !is.na(ecog_notes$ECOGformulaic) |
!is.na(ecog_notes$ECOGcertain) |
!is.na(ecog_notes$ECOGclear))
notes_sub$ECOG = rowSums(notes_sub[,4:6],na.rm=TRUE)
notes_sub$type = "Unknown"
notes_sub$type[!is.na(notes_sub$ECOGformulaic)] = "Formulaic"
notes_sub$type[!is.na(notes_sub$ECOGcertain)] = "Certain"
notes_sub$type[!is.na(notes_sub$ECOGclear)] = "Clear"
notes_sub = subset(notes_sub, select=c("empi","date","ECOG","type"))
for(category in names(notes_sub)){
notes_sub[,category] = factor(notes_sub[,category])
}
notes_sub
str(notes_sub)
epic_sub = subset(ecog_epic, !is.na(ecog_epic$ECOGformulaic) |
!is.na(ecog_epic$ECOGcertain) |
!is.na(ecog_epic$ECOGclear))
epic_sub$ECOG = rowSums(epic_sub[,4:6],na.rm=TRUE)
epic_sub$type = "Unknown"
epic_sub$type[!is.na(epic_sub$ECOGformulaic)] = "Formulaic"
epic_sub$type[!is.na(epic_sub$ECOGcertain)] = "Certain"
epic_sub$type[!is.na(epic_sub$ECOGclear)] = "Clear"
epic_sub = subset(epic_sub, select=c("empi","date","ECOG","type"))
for(category in names(epic_sub)){
epic_sub[,category] = factor(epic_sub[,category])
}
str(epic_sub)
str(epic_sub)
head(epic_sub)
nrow(epic_sub)
for(category in c("ECOGformulaic","ECOGcertain","ECOGclear")){
epic_sub[,category] = as.numeric(epic_sub[,category])
}
str(epic_sub)
head(epic_sub)
epic_sub$ECOG = rowSums(epic_sub[,4:6],na.rm=TRUE)
epic_sub = subset(ecog_epic, !is.na(ecog_epic$ECOGformulaic) |
!is.na(ecog_epic$ECOGcertain) |
!is.na(ecog_epic$ECOGclear))
for(category in c("ECOGformulaic","ECOGcertain","ECOGclear")){
epic_sub[,category] = as.numeric(epic_sub[,category])
}
epic_sub$ECOG = rowSums(epic_sub[,c("ECOGformulaic","ECOGcertain","ECOGclear")],na.rm=TRUE)
notes_sub = subset(ecog_notes, !is.na(ecog_notes$ECOGformulaic) |
!is.na(ecog_notes$ECOGcertain) |
!is.na(ecog_notes$ECOGclear))
notes_sub$ECOG = rowSums(notes_sub[,c("ECOGformulaic","ECOGcertain","ECOGclear")],na.rm=TRUE)
notes_sub$type = "Unknown"
notes_sub$type[!is.na(notes_sub$ECOGformulaic)] = "Formulaic"
notes_sub$type[!is.na(notes_sub$ECOGcertain)] = "Certain"
notes_sub$type[!is.na(notes_sub$ECOGclear)] = "Clear"
notes_sub = subset(notes_sub, select=c("empi","date","ECOG","type"))
for(category in names(notes_sub)){
notes_sub[,category] = factor(notes_sub[,category])
}
str(notes_sub)
notes_sub
epic_sub = subset(ecog_epic, !is.na(ecog_epic$ECOGformulaic) |
!is.na(ecog_epic$ECOGcertain) |
!is.na(ecog_epic$ECOGclear))
for(category in c("ECOGformulaic","ECOGcertain","ECOGclear")){
epic_sub[,category] = as.numeric(epic_sub[,category])
}
epic_sub$ECOG = rowSums(epic_sub[,c("ECOGformulaic","ECOGcertain","ECOGclear")],na.rm=TRUE)
epic_sub$type = "Unknown"
epic_sub$type[!is.na(epic_sub$ECOGformulaic)] = "Formulaic"
epic_sub$type[!is.na(epic_sub$ECOGcertain)] = "Certain"
epic_sub$type[!is.na(epic_sub$ECOGclear)] = "Clear"
head(epic_sub)
epic_sub = subset(epic_sub, select=c("PATIENT_ID","DATE_OF_SERVICE","ECOG","type"))
for(category in names(epic_sub)){
epic_sub[,category] = factor(epic_sub[,category])
}
str(epic_sub)
epic_sub
epic_sub = subset(ecog_epic, !is.na(ecog_epic$ECOGformulaic) |
!is.na(ecog_epic$ECOGcertain) |
!is.na(ecog_epic$ECOGclear))
for(category in c("ECOGformulaic","ECOGcertain","ECOGclear")){
epic_sub[,category] = as.numeric(epic_sub[,category])
}
epic_sub$ECOG = rowSums(epic_sub[,c("ECOGformulaic","ECOGcertain","ECOGclear")],na.rm=TRUE)
epic_sub$type = "Unknown"
epic_sub$type[!is.na(epic_sub$ECOGformulaic)] = "Formulaic"
epic_sub$type[!is.na(epic_sub$ECOGcertain)] = "Certain"
epic_sub$type[!is.na(epic_sub$ECOGclear)] = "Clear"
head(epic_sub)
epic_sub = subset(epic_sub, select=c("PATIENT_ID","DATE_OF_SERVICE","SPEC_NOTE_DATE","ECOG","type"))
for(category in names(epic_sub)){
epic_sub[,category] = factor(epic_sub[,category])
}
str(epic_sub)
epic_sub
epic_sub[,2:3]
epic_sub = subset(ecog_epic, !is.na(ecog_epic$ECOGformulaic) |
!is.na(ecog_epic$ECOGcertain) |
!is.na(ecog_epic$ECOGclear))
for(category in c("ECOGformulaic","ECOGcertain","ECOGclear")){
epic_sub[,category] = as.numeric(epic_sub[,category])
}
epic_sub$ECOG = rowSums(epic_sub[,c("ECOGformulaic","ECOGcertain","ECOGclear")],na.rm=TRUE)
epic_sub$type = "Unknown"
epic_sub$type[!is.na(epic_sub$ECOGformulaic)] = "Formulaic"
epic_sub$type[!is.na(epic_sub$ECOGcertain)] = "Certain"
epic_sub$type[!is.na(epic_sub$ECOGclear)] = "Clear"
epic_sub = subset(epic_sub, select=c("PATIENT_ID","DATE_OF_SERVICE","ECOG","type"))
for(category in names(epic_sub)){
epic_sub[,category] = factor(epic_sub[,category])
}
str(epic_sub)
epic_sub
library(data.table)
library(dplyr)
setwd("~/remotecomp")
N = 400000 # total number of notes considered
n = 100
df_2 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE, nrow=10000,
fill=TRUE,
comment.char = "", header=TRUE)
str(df_2)
df_2 = df_2 %>%
filter(INPATIENT_NOTE_TYPE_DESCR=="Progress Notes") %>%
filter(substring(X.PATIENT_ID,1,1)=="Z")
str(df_2)
df_2 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE, nrow=10000,
fill=TRUE,
comment.char = "", header=TRUE)
df_2 = df_2 %>%
subset(INPATIENT_NOTE_TYPE_DESCR=="Progress Notes") %>%
subset(substring(X.PATIENT_ID,1,1)=="Z")
str(df_2)
df_2$X.PATIENT_ID = factor(df_2$X.PATIENT_ID)
str(df_2)
for(category in names(df_2)){
df_2[,category] = factor(df_2[,category])
}
str(df_2)
df_2$LINE_NBR
str(df_2)
df_2 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE, nrow=100000,
fill=TRUE,
comment.char = "", header=TRUE)
df_2 = df_2 %>%
subset(INPATIENT_NOTE_TYPE_DESCR=="Progress Notes") %>%
subset(substring(X.PATIENT_ID,1,1)=="Z")
for(category in names(df_2)){
df_2[,category] = factor(df_2[,category])
}
str(df_2)
df_3 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE, skip=1000,
nrow=100,
fill=TRUE,
comment.char = "", header=TRUE)
df_3 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE,
nrow=100,
fill=TRUE,
comment.char = "", header=TRUE)
df_3 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE,
nrow=100, skip=1000,
fill=TRUE,
comment.char = "", header=TRUE)
library(data.table)
library(dplyr)
setwd("~/remotecomp")
df_3 = read.table("epic_clin_notes_file.TXT", sep="|",
allowEscapes=TRUE,
nrow=100, skip=1000,
fill=TRUE,
comment.char = "", header=TRUE)
str(df_2)
write.csv(df_2,"../dropbox (MIT)/healthcare_project/dana_farber_notes.csv", row.names = FALSE)
getwd()
write.csv(df_2,"/dropbox (MIT)/healthcare_project/dana_farber_notes.csv", row.names = FALSE)
write.csv(df_2,"dropbox (MIT)/healthcare_project/dana_farber_notes.csv", row.names = FALSE)
version
version # version.string >= 3.3.2
install.packages("installr")
library(installr)
install.packages("data.table")
library(data.table)
remove.packages("data.table")
install.packages("data.table", type = "source",
repos = "http://Rdatatable.github.io/data.table")
library(data.table)
setwd("~/remotecomp")
setwd("~/remotecomp")
library(tidyverse)
library(data.table)
df_CANCER_DIAGNOSIS_CAREG = fread("REQ_AE955_41273_CANCER_DIAGNOSIS_CAREG.csv")
df_CANCER_DIAGNOSIS_CAREG = fread("REQ_AE955_41273_CANCER_DIAGNOSIS_CAREG.csv", header=T)
df_CANCER_DIAGNOSIS_CAREG = fread("REQ_AE955_41273_CANCER_DIAGNOSIS_CAREG.csv", fill=T,header=T)
str(df_CANCER_DIAGNOSIS_CAREG)
?fread
diag_df = fread('ae955_021816102639761261_Dia.txt', sep="|")
diag_df = fread('ae955_021816102639761261_Dia.txt', sep="|", fill=T)
diag_df = fread('ae955_021816102639761261_Dia.txt', sep="|", fill=TRUE)
diag_df = fread('ae955_021816102639761261_Dia.txt', sep="|", fill=TRUE, skip=2439L)
str(diag_df)
diag_df[1,]
str(diag_df)
unique(diag_df_1$Diagnosis_Name)
unique(diag_df$Diagnosis_Name)
unique(diag_df$Diagnosis_Name)
str(diag_df$V6)
unique(diag_df$V6)
table(diag_df$V6)
setwd("~/remotecomp")
library(tidyverse)
# remove.packages("data.table") # First remove the current version
# install.packages("data.table", type = "source",repos = "http://Rdatatable.github.io/data.table")
library(data.table)
data = read.csv("REQ_AE955_41273_CANCER_DIAGNOSIS_CAREG.csv", nrows=50000)
names(data)
str(data)
data = read.csv("REQ_AE955_41273_CANCER_DIAGNOSIS_CAREG.csv", nrows=1000)
names(data)
str(data)
data = read.csv("REQ_AE955_41273_CANCER_DIAGNOSIS_CAREG.csv", nrows=5)
data
data
head_file = paste0("file_headers_csv/",dataname,".csv")
write.csv(head_file, data)
dataname = "CANCER_DIAGNOSIS_CAREG"
orig_file = paste0("REQ_AE955_41273_", dataname, ".csv")
data = read.csv(orig_file, nrows=5)
head_file = paste0("file_headers_csv/",dataname,".csv")
write.csv(head_file, data)
head_file = paste0("file_headers_csv/",dataname,".csv")
write.csv(data, head_file)
dataname_list = c("CANCER_DIAGNOSIS_CAREG",
"DEMOGRAPHICS_REGISTRATION",
"PT_INFO_STATUS_REGISTRATION",
"OUTPT_CHEMO_BLOOD_ORDERS_COE",
"OUTPT_MEDICATIONS_PHARMACY",
"OUTPT_VISIT_DIAGNOSIS_BILLING",
"OUTPT_VISIT_COUNTS_DATES_SCHED",
"OUTPT_APPTS_SCHED",
"ONCOMAP_MUT_RESULTS_PROFILE",
"ONCOPANEL_VAR_RESULTS_CNV",
"ONCOPANEL_VAR_RESULTS_PROFILE")
for(dataname in dataname_list){
orig_file = paste0("REQ_AE955_41273_", dataname, ".csv")
data = read.csv(orig_file, nrows=5)
head_file = paste0("file_headers_csv/",dataname,".csv")
write.csv(data, head_file)
}
for(dataname in dataname_list){
orig_file = paste0("REQ_AE955_41273_", dataname, ".csv")
data = read.csv(orig_file, nrows=5)
head_file = paste0("file_headers_csv/",dataname,".csv")
write.csv(data, head_file, row.names=FALSE)
}
setwd("~/remotecomp")
datatype_list = c("Con",
"Dem",
"Dia",
"Enc",
"Lhm",
"Lme",
"Lsv",
"Med",
"Mrn",
"Pal",
"Phy",
"Prv",
"Rdt",
"Tr")
datatype = "Con"
orig_file = paste0("ae955_021816104717105042_", datatype, ".csv")
data = read.csv(orig_file, nrows=5)
setwd("~/remotecomp")
datatype = "Con"
orig_file = paste0("ae955_021816104717105042_", datatype, ".csv")
data = read.csv(orig_file, nrows=5)
orig_file = paste0("ae955_021816104717105042_", datatype, ".txt")
data = read.csv(orig_file, nrows=5)
data = read.csv(orig_file, sep="|", nrows=5)
head_file = paste0("file_headers_txt/",datatype,".csv")
write.csv(data, head_file, row.names=FALSE)
datatype = "Dem"
orig_file = paste0("ae955_021816104717105042_", datatype, ".txt")
data = read.csv(orig_file, sep="|", nrows=5)
head_file = paste0("file_headers_txt/",datatype,".csv")
write.csv(data, head_file, row.names=FALSE)
datatype = "Con"
orig_file = paste0("ae955_021816104717105042_", datatype, ".txt")
data = read.csv(orig_file, sep="|", nrows=5)
head_file = paste0("file_headers_txt/BWH_",datatype,".csv")
write.csv(data, head_file, row.names=FALSE)
for(datatype in datatype_list){
orig_file = paste0("ae955_021816104717105042_", datatype, ".txt")
data = read.csv(orig_file, sep="|", nrows=5)
head_file = paste0("file_headers_txt/BWH_",datatype,".csv")
write.csv(data, head_file, row.names=FALSE)
}
datatype_list = c("Con",
"Dem",
"Dia",
"Enc",
"Lhm",
"Lme",
"Lvs",
"Med",
"Mrn",
"Pal",
"Phy",
"Prv",
"Rdt",
"Tr")
for(datatype in datatype_list){
orig_file = paste0("ae955_021816104717105042_", datatype, ".txt")
data = read.csv(orig_file, sep="|", nrows=5)
head_file = paste0("file_headers_txt/BWH_",datatype,".csv")
write.csv(data, head_file, row.names=FALSE)
}
datatype_list = c("Con",
"Dem",
"Dia",
"Enc",
"Lhm",
"Lme",
"Lvs",
"Med",
"Mrn",
"Pal",
"Phy",
"Prv",
"Rdt",
"Trn")
for(datatype in datatype_list){
orig_file = paste0("ae955_021816104717105042_", datatype, ".txt")
data = read.csv(orig_file, sep="|", nrows=5)
head_file = paste0("file_headers_txt/BWH_",datatype,".csv")
write.csv(data, head_file, row.names=FALSE)
}
letters
letters[1]
for(l in letters[1:20]){
print(l)
}
l = "a"
orig_file = paste0("oncdrs_lab_xa",l,"_mod.Rds")
head_file = paste0("file_headers_rds/lab_xa",l,".csv")
head_file = paste0("file_headers_rds/lab_xa",l,".csv")
write.csv(data, head_file, row.names=FALSE)
read.csv("~/Downloads/workbook2.csv")
more = read.csv("~/Downloads/workbook2.csv")
more = read.csv("~/Downloads/Workbook2.csv")
more = read.csv("~/Downloads/daisy.csv")
more = read.csv("~/Documents/daisy.csv")
shiny::runApp('shiny-server/patients_like_this')
runApp('shiny-server/patients_like_this')
?n
??n
?hist
c(15:25)
?unite
library(tidyr)
?unite
?min
?left_join
as.integer(2.0)
?gsub
x <- "fa\xE7ile"
Encoding(x) <- "UTF-8"
iconv(x, "UTF-8", "UTF-8",sub='')
?summarize_at
library(dplyr)
?summarize_at
?mutate_if
?mutate_at
?coalesce
setwd("~/repos/cos_2018/3_modeling_and_ml")
# install.packages("tidyverse")
library(tidyverse)
# install.packages("tm")
library(tm)
# install.packages("SnowballC")
library(SnowballC)
# install.packages("caTools")
library(caTools)
# install.packages("rpart")
library(rpart)
# install.packages("rpart.plot")
library(rpart.plot)
# install.packages("sp")
# install.packages("maps")
# install.packages("devtools")
# devtools::install_github("dkahle/ggmap")
library(ggmap)
# install.packages("RColorBrewer")
library(RColorBrewer)
# install.packages("glmnet")
library(glmnet)
e_net <- glmnet(matrix(c(1,2,3,4,3,4,5,6),nrow = 4),c(2,4,6,8))
e_net$beta[1,]
# The output should match up with "output-1.png"
bag_of_words_ex <- "Twelve astronauts have walked on the moon, and over five hundred people have been in outer space.  Currently, two astronauts from the USA are aboard the International Space Station."
small_corpus <- Corpus(VectorSource(bag_of_words_ex)) %>%
tm_map(tolower) %>%
tm_map(PlainTextDocument) %>%
tm_map(removePunctuation) %>%
tm_map(stemDocument)
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
# The output should match up with "output-
# install.packages("tidyverse")
library(tidyverse)
# install.packages("tm")
library(tm)
# install.packages("SnowballC")
library(SnowballC)
# install.packages("caTools")
library(caTools)
# install.packages("rpart")
library(rpart)
# install.packages("rpart.plot")
library(rpart.plot)
# install.packages("sp")
# install.packages("maps")
# install.packages("devtools")
# devtools::install_github("dkahle/ggmap")
library(ggmap)
# install.packages("RColorBrewer")
library(RColorBrewer)
# install.packages("glmnet")
library(glmnet)
e_net <- glmnet(matrix(c(1,2,3,4,3,4,5,6), nrow = 4), c(2,4,6,8))
e_net$beta[1,]
# The output should match up with "output-1.png"
bag_of_words_ex <- "Twelve astronauts have walked on the moon, and over five hundred people have been in outer space.  Currently, two astronauts from the USA are aboard the International Space Station."
small_corpus <- Corpus(VectorSource(bag_of_words_ex)) %>%
tm_map(tolower) %>%
tm_map(PlainTextDocument) %>%
tm_map(removePunctuation) %>%
tm_map(stemDocument)
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
# The output should match up with "output-2.png"
inspect(ex_frequencies)
ex_frequencies
ex_frequencies[1]
str(ex_frequencies)
ex_frequencies$i
ex_frequencies$j
ex_frequencies$nrow
ex_frequencies$ncol
ex_frequencies$dimnames
inspect(ex_frequencies)
small_corpus <- Corpus(VectorSource(bag_of_words_ex))
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
small_corpus <- Corpus(VectorSource(bag_of_words_ex)) %>%
tm_map(tolower) %>%
tm_map(PlainTextDocument) %>%
tm_map(removePunctuation)
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
small_corpus <- Corpus(VectorSource(bag_of_words_ex)) %>%
tm_map(tolower) %>%
tm_map(PlainTextDocument) %>%
tm_map(removePunctuation) %>%
tm_map(stemDocument)
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
small_corpus <- Corpus(VectorSource(bag_of_words_ex)) %>%
tm_map(tolower) %>%
tm_map(PlainTextDocument) %>%
tm_map(removePunctuation) %>%
tm_map(stemDocument)
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
bag_of_words_ex <- "Twelve astronauts have walked on the moon, and over five hundred people have been in outer space.  Currently, two astronauts from the USA are aboard the International Space Station."
small_corpus <- Corpus(VectorSource(bag_of_words_ex)) %>%
tm_map(tolower) %>%
tm_map(PlainTextDocument) %>%
tm_map(removePunctuation) %>%
tm_map(stemDocument)
ex_frequencies <- DocumentTermMatrix(small_corpus)
inspect(ex_frequencies)
ex_frequencies
inspect(ex_frequencies)
